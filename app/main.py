import asyncio
from aiogram import Dispatcher, types
from aiogram.filters import CommandStart, Command
from config.config import Config

dp = Dispatcher()

async def set_bot_commands():
    await Config.bot.set_my_commands([
        types.BotCommand(command="/add", description="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"),
        types.BotCommand(command="/list", description="–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"),
        types.BotCommand(command="/delete", description="–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"),
        types.BotCommand(command="/help", description="–ü–æ–º–æ—â—å"),
    ])

@dp.message(CommandStart())
async def start_command(message: types.Message):
    await message.reply("üìù –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ To-Do List –±–æ—Ç!\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n"
                        "/list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n"
                        "/delete - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É\n"
                        "/help - —Å–ø—Ä–∞–≤–∫–∞")
    await set_bot_commands()
    Config.logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    
@dp.message(Command('help'))
async def help_command(message: types.Message):
    await message.reply("‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "/add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É\n"
                        "/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏\n"
                        "/delete - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ –Ω–æ–º–µ—Ä—É\n"
                        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    Config.logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    
async def main():
    Config.logger.info('Start...')
    await Config.bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(Config.bot)

if __name__ == '__main__':
    asyncio.run(main())